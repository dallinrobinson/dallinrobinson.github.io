[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Customer Segmentation Made Simple: K-Means in Python",
    "section": "",
    "text": "Ever wonder how companies like Spotify recommend playlists or how stores know which coupons to send you? Customer segmentation is the key. In this tutorial, we’ll walk through how to use K-Means clustering in Python to group customers into meaningful segments.\nBy the end, you’ll know how to:"
  },
  {
    "objectID": "blog.html#why-customer-segmentation-matters",
    "href": "blog.html#why-customer-segmentation-matters",
    "title": "Customer Segmentation Made Simple: K-Means in Python",
    "section": "Why Customer Segmentation Matters",
    "text": "Why Customer Segmentation Matters\nBusinesses rarely treat all customers the same. Instead, they group customers into segments based on characteristics like age, spending, or habits. This allows for:\n\nPersonalized marketing (ads that feel relevant, not random)\nSmarter product design (different products for different groups)\nBetter resource allocation (focus on high-value customers)\n\nAnd the cool part? You don’t need dozens of variables to see interesting patterns. Sometimes just age and annual spending are enough to show natural groupings."
  },
  {
    "objectID": "blog.html#step-1-load-the-data",
    "href": "blog.html#step-1-load-the-data",
    "title": "Customer Segmentation Made Simple: K-Means in Python",
    "section": "Step 1: Load the Data",
    "text": "Step 1: Load the Data\nLet’s start with a simple dataset of fictional customers:\n\n\nCode\nimport pandas as pd\n\n# Sample dataset\ndata = {\n    \"CustomerID\": [1, 2, 3, 4, 5, 6],\n    \"Age\": [19, 35, 26, 27, 50, 45],\n    \"AnnualSpend\": [15_000, 35_000, 18_000, 22_000, 55_000, 48_000]\n}\n\ndf = pd.DataFrame(data)\n\n\nHere is a clean summary table of the dataset:\n\n\n\nCustomerID\nAge\nAnnualSpend\n\n\n\n\n1\n19\n15000\n\n\n2\n35\n35000\n\n\n3\n26\n18000\n\n\n4\n27\n22000\n\n\n5\n50\n55000\n\n\n6\n45\n48000\n\n\n\nHere is the actual code output:\n\n\nCode\nprint(df)\n\n\n   CustomerID  Age  AnnualSpend\n0           1   19        15000\n1           2   35        35000\n2           3   26        18000\n3           4   27        22000\n4           5   50        55000\n5           6   45        48000"
  },
  {
    "objectID": "blog.html#step-2-run-k-means",
    "href": "blog.html#step-2-run-k-means",
    "title": "Customer Segmentation Made Simple: K-Means in Python",
    "section": "Step 2: Run K-Means",
    "text": "Step 2: Run K-Means\nWe’ll use scikit-learn’s implementation of K-Means.\n\n\nCode\nfrom sklearn.cluster import KMeans\n\nX = df[[\"Age\", \"AnnualSpend\"]]\n\n# Create a KMeans model with 2 clusters\nkmeans = KMeans(n_clusters=2, random_state=42)\ndf[\"Cluster\"] = kmeans.fit_predict(X)\n\nprint(df)\n\n\n   CustomerID  Age  AnnualSpend  Cluster\n0           1   19        15000        0\n1           2   35        35000        1\n2           3   26        18000        0\n3           4   27        22000        0\n4           5   50        55000        1\n5           6   45        48000        1\n\n\nNow each customer has a cluster label indicating their segment."
  },
  {
    "objectID": "blog.html#step-3-visualize-the-clusters",
    "href": "blog.html#step-3-visualize-the-clusters",
    "title": "Customer Segmentation Made Simple: K-Means in Python",
    "section": "Step 3: Visualize the Clusters",
    "text": "Step 3: Visualize the Clusters\nA scatterplot helps us see how the groups form.\n\n\nCode\nimport matplotlib.pyplot as plt\n\nplt.scatter(df[\"Age\"], df[\"AnnualSpend\"], c=df[\"Cluster\"], cmap=\"viridis\", s=100)\nplt.xlabel(\"Age\")\nplt.ylabel(\"Annual Spending ($)\")\nplt.title(\"Customer Segments (K-Means)\")\nplt.show()\n\n\n\n\n\n\n\n\n\nTip: Each color shows a different segment. Try changing n_clusters to 3 or 4 and see how the picture changes.\nExample visualization: \nAlt text: Scatterplot with customers grouped into two clusters by spending and age."
  },
  {
    "objectID": "blog.html#step-4-interpret-the-cluster-centers",
    "href": "blog.html#step-4-interpret-the-cluster-centers",
    "title": "Customer Segmentation Made Simple: K-Means in Python",
    "section": "Step 4: Interpret the Cluster Centers",
    "text": "Step 4: Interpret the Cluster Centers\nK-Means calculates cluster centers (the “average” customer in each group).\n\n\nCode\ncenters = pd.DataFrame(kmeans.cluster_centers_, columns=[\"Age\", \"AnnualSpend\"])\nprint(centers)\n\n\n         Age   AnnualSpend\n0  24.000000  18333.333333\n1  43.333333  46000.000000\n\n\nThis tells a clear story:\n\nCluster 0 → Younger customers with lower spending\nCluster 1 → Older customers with higher spending"
  },
  {
    "objectID": "blog.html#wrapping-up",
    "href": "blog.html#wrapping-up",
    "title": "Customer Segmentation Made Simple: K-Means in Python",
    "section": "Wrapping Up",
    "text": "Wrapping Up\nK-Means gives us a quick, data-driven way to segment customers. Even with just two variables, we can uncover meaningful groups that businesses can target differently."
  },
  {
    "objectID": "blog.html#call-to-action",
    "href": "blog.html#call-to-action",
    "title": "Customer Segmentation Made Simple: K-Means in Python",
    "section": "Call to Action",
    "text": "Call to Action\nNow that you’ve seen how simple customer segmentation can be, try it yourself!\n\nUse a different dataset—like survey responses, your Spotify listening habits, or even your classmates’ study hours.\nExperiment with different numbers of clusters (n_clusters).\nShare your visualization with a peer and explain what the groups might mean.\n\nFor further reading, check out the scikit-learn K-Means documentation."
  },
  {
    "objectID": "ds-portfolio.html",
    "href": "ds-portfolio.html",
    "title": "ds-portfolio",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "ds-portfolio.html#quarto",
    "href": "ds-portfolio.html#quarto",
    "title": "ds-portfolio",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "Welcome! I’m a Statistics major at Brigham Young University with minors in Mathematics and Business. I’m passionate about using data and technology to solve meaningful problems and make better business decisions.\n\n\nThis site is my personal data science portfolio and learning journal. Here, I share my experiences, reflections, and key lessons from:\n\nCoursework in statistics, analytics, and machine learning\nResearch and internships where I apply data-driven methods\nIndependent projects and explorations in Python and R\n\nI built this website using Quarto and host it on GitHub Pages. It’s designed to grow as I do — documenting my journey from student to professional data scientist.\n\nThanks for stopping by — feel free to visit my About Me page to learn more!\nGitHub • LinkedIn"
  },
  {
    "objectID": "index.html#purpose-of-this-site",
    "href": "index.html#purpose-of-this-site",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "This site is my personal data science portfolio and learning journal. Here, I share my experiences, reflections, and key lessons from:\n\nCoursework in statistics, analytics, and machine learning\nResearch and internships where I apply data-driven methods\nIndependent projects and explorations in Python and R\n\nI built this website using Quarto and host it on GitHub Pages. It’s designed to grow as I do — documenting my journey from student to professional data scientist.\n\nThanks for stopping by — feel free to visit my About Me page to learn more!\nGitHub • LinkedIn"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Dallin Robinson\nHi, I’m Dallin Robinson, a senior at Brigham Young University majoring in Statistics with minors in Mathematics and Business. I’m fascinated by the intersection of data, technology, and human decision-making — and I love finding ways to make analytics approachable and useful.\nI’ll be starting the Master of Business & Technology (MBT) program at Purdue University in July 2026, focusing on AI-driven innovation and strategy."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About Me",
    "section": "Education",
    "text": "Education\n\nBrigham Young University — B.S. in Statistics, Minors in Math & Business Expected Graduation: April 2026 GPA: 3.80 | Major GPA: 4.00 Spanish Language Certificate (Advanced) Member of Mu Sigma Rho, ASA, and BYU Statistics Club"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "About Me",
    "section": "Experience",
    "text": "Experience\nBusiness Systems Consulting Intern – Cache Valley Electric (CVE) (Sep 2025 – Present) Auditing CVE’s digital asset systems, developing metadata taxonomy, and preparing executive recommendations for AI automation.\nResearch Assistant – BYU Statistics Department (Sep 2025 – Present) Studying neural network dropout methods, focusing on CorEx-based cluster dropout, and contributing to reproducible research experiments.\nData Science Intern – ON24 (Mar 2025 – Oct 2025) Developed a two-tower recommender model in PyTorch (↑13.1% performance) and deployed an AI-based webinar thumbnail generator using GPT-4o.\nTeaching Assistant – BYU Statistics (Jan 2024 – Apr 2025) Supported 100+ students each semester in STAT 121 & 230, guiding R-based labs and improving curriculum clarity.\nLegal Operations & Data Analyst Intern – Culwell Legal (2023–2024) Standardized legal datasets and trained staff on MyCase software, improving compliance and workflow efficiency."
  },
  {
    "objectID": "about.html#skills",
    "href": "about.html#skills",
    "title": "About Me",
    "section": "Skills",
    "text": "Skills\nProgramming & Tools: Python (pandas, scikit-learn, PyTorch), R (tidyverse), SQL, Tableau, Git, Excel Analytics & Modeling: Regression, recommender systems, feature selection, experimental design Soft Skills: Teaching, communication, leadership, bilingual (English/Spanish)"
  },
  {
    "objectID": "about.html#get-to-know-me",
    "href": "about.html#get-to-know-me",
    "title": "About Me",
    "section": "Get to Know Me",
    "text": "Get to Know Me\nOutside of data science, I love:\n\nRunning and training for Spartan races\n3D printing and DIY design projects with my wife, Emma\nTraveling — we recently spent our honeymoon in Puerto Rico\nWatching BYU football and exploring new tech gadgets"
  },
  {
    "objectID": "about.html#connect-with-me",
    "href": "about.html#connect-with-me",
    "title": "About Me",
    "section": "Connect with Me",
    "text": "Connect with Me\nLinkedIn • GitHub • Email"
  }
]